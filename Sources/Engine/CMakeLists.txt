cmake_minimum_required(VERSION 3.7.2)
project(Engine)

set(ENGINE_ENTITIES_CPP "")
set(ENGINE_ENTITIES_H "")
entity(ENGINE_ENTITIES "Engine/Classes/BaseEvents")
entity(ENGINE_ENTITIES "Engine/Classes/MovableBrushEntity")
entity(ENGINE_ENTITIES "Engine/Classes/MovableEntity")
entity(ENGINE_ENTITIES "Engine/Classes/MovableModelEntity")
entity(ENGINE_ENTITIES "Engine/Classes/PlayerEntity")
add_custom_target(ParseEngineEntities DEPENDS ${ENGINE_ENTITIES_H})

add_parser_and_scanner("Base/Parser" "Base/Scanner" "yy")
add_parser_and_scanner("Ska/smcPars" "Ska/smcScan" "syy")

set(ENGINE_SRCS
  ${ENGINE_ENTITIES_CPP}
  "Engine.cpp"
  "StdH.cpp"

  "API/API.cpp"

  "Base/Anim.cpp"
  "Base/Changeable.cpp"
  "Base/Console.cpp"
  "Base/CRC.cpp"
  "Base/CRCTable.cpp"
  "Base/CTString.cpp"
  "Base/Directory.cpp"
  "Base/DynamicModules.cpp"
  "Base/ErrorReporting.cpp"
  "Base/FileName.cpp"
  "Base/GameDir.cpp"
  "Base/IFeel.cpp"
  "Base/Input.cpp"
  "Base/Input2ndMouse.cpp"
  "Base/InputJoystick.cpp"
  "Base/Lists.cpp"
  "Base/Memory.cpp"
  "Base/Profiling.cpp"
  "Base/ProgressHook.cpp"
  "Base/Protection.cpp"
  "Base/Registry.cpp"
  "Base/Relations.cpp"
  "Base/ReplaceFile.cpp"
  "Base/Serial.cpp"
  "Base/Shell.cpp"
  "Base/ShellTypes.cpp"
  #"Base/StackDump.cpp"
  "Base/Statistics.cpp"
  "Base/Stream.cpp"
  "Base/Synchronization.cpp"
  "Base/Timer.cpp"
  "Base/Translation.cpp"
  "Base/Unzip.cpp"
  "Base/Updateable.cpp"

  "Base/Scanner.cpp"
  "Base/Parser.cpp"
  "Base/Parser.h"

  "Brushes/Brush.cpp"
  "Brushes/BrushArchive.cpp"
  "Brushes/BrushExport.cpp"
  "Brushes/BrushImport.cpp"
  "Brushes/BrushIO.cpp"
  "Brushes/BrushMip.cpp"
  "Brushes/BrushPolygon.cpp"
  "Brushes/BrushSector.cpp"
  "Brushes/BrushShadows.cpp"
  "Brushes/BrushTriangularize.cpp"

  "Entities/Entity.cpp"
  "Entities/EntityClass.cpp"
  "Entities/EntityCollision.cpp"
  "Entities/EntityCopying.cpp"
  "Entities/EntityProperties.cpp"
  "Entities/FieldBSPTesting.cpp"
  "Entities/LastPositions.cpp"
  "Entities/NearestPolygon.cpp"
  "Entities/PlayerCharacter.cpp"

  "Graphics/Adapter.cpp"
  "Graphics/Benchmark.cpp"
  "Graphics/Color.cpp"
  "Graphics/DepthCheck.cpp"
  "Graphics/DisplayMode.cpp"
  "Graphics/DrawPort.cpp"
  "Graphics/DrawPort_Particles.cpp"
  "Graphics/DrawPort_RenderScene.cpp"
  "Graphics/Fog.cpp"
  "Graphics/Font.cpp"
  "Graphics/Gfx_Direct3D.cpp"
  "Graphics/Gfx_Direct3D_Colors.cpp"
  "Graphics/Gfx_Direct3D_Textures.cpp"
  "Graphics/Gfx_OpenGL.cpp"
  "Graphics/Gfx_OpenGL_Textures.cpp"
  "Graphics/Gfx_wrapper.cpp"
  "Graphics/GfxLibrary.cpp"
  "Graphics/GfxProfile.cpp"
  "Graphics/Graphics.cpp"
  "Graphics/ImageInfo.cpp"
  "Graphics/MultiMonitor.cpp"
  "Graphics/Raster.cpp"
  "Graphics/Shader.cpp"
  "Graphics/ShadowMap.cpp"
  "Graphics/Stereo.cpp"
  "Graphics/Texture.cpp"
  "Graphics/TextureEffects.cpp"
  "Graphics/TextureRender.cpp"
  "Graphics/ViewPort.cpp"

  "Light/LayerMaker.cpp"
  "Light/LayerMixer.cpp"
  "Light/LightSource.cpp"

  "Math/Float.cpp"
  "Math/Functions.cpp"
  "Math/Geometry.cpp"
  "Math/Geometry_DOUBLE.cpp"
  "Math/Object3D.cpp"
  "Math/Object3D_CSG.cpp"
  "Math/Object3D_IO.cpp"
  "Math/ObjectSector.cpp"
  "Math/Placement.cpp"
  "Math/Projection.cpp"
  "Math/Projection_Isometric.cpp"
  "Math/Projection_Parallel.cpp"
  "Math/Projection_Perspective.cpp"
  "Math/Projection_Simple.cpp"
  "Math/Projection_Simple_DOUBLE.cpp"
  "Math/TextureMapping.cpp"

  "Models/EditModel.cpp"
  "Models/MipMaker.cpp"
  "Models/Model.cpp"
  "Models/ModelProfile.cpp"
  "Models/Normals.cpp"
  "Models/RenderModel.cpp"
  "Models/RenderModel_Mask.cpp"
  "Models/RenderModel_View.cpp"
  "Models/VertexGetting.cpp"

  "Network/ActionBuffer.cpp"
  "Network/ClientInterface.cpp"
  "Network/CommunicationInterface.cpp"
  "Network/Compression.cpp"
  "Network/CPacket.cpp"
  "Network/Diff.cpp"
  "Network/MessageDispatcher.cpp"
  "Network/Network.cpp"
  "Network/NetworkMessage.cpp"
  "Network/NetworkProfile.cpp"
  "Network/PlayerBuffer.cpp"
  "Network/PlayerSource.cpp"
  "Network/PlayerTarget.cpp"
  "Network/Server.cpp"
  "Network/SessionState.cpp"

  "OS/DynamicLibraries.cpp"
  "OS/FileSystem.cpp"
  "OS/WindowsAPI.cpp"

  "Query/DarkPlacesQuery.cpp"
  "Query/GameAgentQuery.cpp"
  "Query/LegacyClientQuery.cpp"
  "Query/LegacyFunctions.cpp"
  "Query/LegacyServerQuery.cpp"
  "Query/MasterServer.cpp"
  "Query/QueryManager.cpp"
  "Query/ServerRequest.cpp"

  "Rendering/Render.cpp"
  "Rendering/RenderProfile.cpp"
  "Rendering/SelectOnRender.cpp"

  "Ska/AnimSet.cpp"
  "Ska/Mesh.cpp"
  "Ska/ModelInstance.cpp"
  "Ska/RMRender.cpp"
  "Ska/RMRenderMask.cpp"
  "Ska/Skeleton.cpp"
  "Ska/StringTable.cpp"
  "Ska/smcPars.cpp"
  "Ska/smcPars.h"
  "Ska/smcScan.cpp"

  "Sound/SoundAPI.cpp"
  "Sound/SoundAPI_DSound.cpp"
  "Sound/SoundAPI_SDL.cpp"
  "Sound/SoundAPI_WaveOut.cpp"
  "Sound/SoundData.cpp"
  "Sound/SoundDecoder.cpp"
  "Sound/SoundLibrary.cpp"
  "Sound/SoundMixer.cpp"
  "Sound/SoundObject.cpp"
  "Sound/SoundProfile.cpp"
  "Sound/Wave.cpp"

  "Templates/BSP.cpp"
  "Templates/NameTable_CTFileName.cpp"
  "Templates/NameTable_CTranslationPair.cpp"
  "Templates/Stock_CAnimData.cpp"
  "Templates/Stock_CAnimSet.cpp"
  "Templates/Stock_CEntityClass.cpp"
  "Templates/Stock_CMesh.cpp"
  "Templates/Stock_CModelData.cpp"
  "Templates/Stock_CShader.cpp"
  "Templates/Stock_CSkeleton.cpp"
  "Templates/Stock_CSoundData.cpp"
  "Templates/Stock_CTextureData.cpp"

  "Terrain/ArrayHolder.cpp"
  "Terrain/Terrain.cpp"
  "Terrain/TerrainArchive.cpp"
  "Terrain/TerrainEditing.cpp"
  "Terrain/TerrainLayer.cpp"
  "Terrain/TerrainMisc.cpp"
  "Terrain/TerrainRayCasting.cpp"
  "Terrain/TerrainRender.cpp"
  "Terrain/TerrainTile.cpp"

  "World/PhysicsProfile.cpp"
  "World/World.cpp"
  "World/WorldCollision.cpp"
  "World/WorldCollisionGrid.cpp"
  "World/WorldCSG.cpp"
  "World/WorldEditingProfile.cpp"
  "World/WorldIO.cpp"
  "World/WorldRayCasting.cpp"
)

add_library(Engine STATIC ${ENGINE_SRCS})
add_dependencies(Engine ParseEngineEntities)

# For Engine/StdH.h access
target_include_directories(Engine PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")

target_link_libraries(Engine ThirdPartyLibs)
set_target_properties(Engine PROPERTIES ENABLE_EXPORTS ON)
